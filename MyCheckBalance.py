# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CheckBalanceDesign.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import json
import requests
import pyodbc
from PyQt5 import QtCore, QtGui, QtWidgets
from requests import auth
from requests import exceptions
from requests.auth import HTTPDigestAuth
from PyQt5.QtCore import Qt
from threading import Timer
from time import time, sleep
from dateutil import tz
import datetime
from datetime import tzinfo, timedelta
from PyQt5 import QtTest


class FixedOffset(tzinfo):
    """Fixed offset in minutes east from UTC."""

    def __init__(self, offset, name):
        self.__offset = timedelta(minutes = offset)
        self.__name = name

    def utcoffset(self, dt):
        return self.__offset

    def tzname(self, dt):
        return self.__name

    def dst(self, dt):
        return timedelta(0)
class Ui_CheckBalance(object): 
    def setupUi(self, CheckBalance):
        CheckBalance.setObjectName("CheckBalance")
        CheckBalance.resize(900, 505)
        self.centralwidget = QtWidgets.QWidget(CheckBalance)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsViewPerson = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsViewPerson.setGeometry(QtCore.QRect(10, 10, 211, 91))
        self.graphicsViewPerson.setStyleSheet("image: url(:/image/TCMLOGO.jfif);\n"
"background-image: url(:/image/TCMLOGO.jfif);")
        self.graphicsViewPerson.setObjectName("graphicsViewPerson")
        self.labe_lCardNo = QtWidgets.QLabel(self.centralwidget)
        self.labe_lCardNo.setGeometry(QtCore.QRect(230, 30, 91, 21))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.labe_lCardNo.setFont(font)
        self.labe_lCardNo.setObjectName("labe_lCardNo")
        self.lineEdit_PersonNo = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_PersonNo.setGeometry(QtCore.QRect(10, 140, 211, 41))
        self.lineEdit_PersonNo.setObjectName("lineEdit_PersonNo")
        self.label_PersonNo = QtWidgets.QLabel(self.centralwidget)
        self.label_PersonNo.setGeometry(QtCore.QRect(10, 110, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_PersonNo.setFont(font)
        self.label_PersonNo.setObjectName("label_PersonNo")
        self.label_PersonName = QtWidgets.QLabel(self.centralwidget)
        self.label_PersonName.setGeometry(QtCore.QRect(230, 110, 131, 21))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_PersonName.setFont(font)
        self.label_PersonName.setObjectName("label_PersonName")
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 280, 871, 181))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.tableView_transection = QtWidgets.QTableView(self.gridLayoutWidget)
        self.tableView_transection.setObjectName("tableView_transection")
        self.gridLayout.addWidget(self.tableView_transection, 0, 0, 1, 1)
        self.label_AmountCanUse = QtWidgets.QLabel(self.centralwidget)
        self.label_AmountCanUse.setGeometry(QtCore.QRect(560, 20, 321, 91))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(72)
        font.setBold(True)
        font.setWeight(75)
        self.label_AmountCanUse.setFont(font)
        self.label_AmountCanUse.setStyleSheet("color: rgb(0, 170, 0);")
        self.label_AmountCanUse.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_AmountCanUse.setObjectName("label_AmountCanUse")
        self.lineEdit_personLeave = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_personLeave.setGeometry(QtCore.QRect(10, 220, 211, 41))
        self.lineEdit_personLeave.setObjectName("lineEdit_personLeave")
        self.label_PersonalLeave = QtWidgets.QLabel(self.centralwidget)
        self.label_PersonalLeave.setGeometry(QtCore.QRect(10, 190, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_PersonalLeave.setFont(font)
        self.label_PersonalLeave.setObjectName("label_PersonalLeave")
        self.lineEdit_MedicalRemaining = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_MedicalRemaining.setGeometry(QtCore.QRect(670, 220, 211, 41))
        self.lineEdit_MedicalRemaining.setObjectName("lineEdit_MedicalRemaining")
        self.lineEdit_RemainLeave = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_RemainLeave.setGeometry(QtCore.QRect(230, 220, 211, 41))
        self.lineEdit_RemainLeave.setObjectName("lineEdit_RemainLeave")
        self.lineEdit_MedicalExpenses = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_MedicalExpenses.setGeometry(QtCore.QRect(450, 220, 211, 41))
        self.lineEdit_MedicalExpenses.setObjectName("lineEdit_MedicalExpenses")
        self.label_Department = QtWidgets.QLabel(self.centralwidget)
        self.label_Department.setGeometry(QtCore.QRect(580, 110, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_Department.setFont(font)
        self.label_Department.setObjectName("label_Department")
        self.label_RemainingLeave = QtWidgets.QLabel(self.centralwidget)
        self.label_RemainingLeave.setGeometry(QtCore.QRect(230, 190, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_RemainingLeave.setFont(font)
        self.label_RemainingLeave.setObjectName("label_RemainingLeave")
        self.label_MedicalExpense = QtWidgets.QLabel(self.centralwidget)
        self.label_MedicalExpense.setGeometry(QtCore.QRect(450, 190, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_MedicalExpense.setFont(font)
        self.label_MedicalExpense.setObjectName("label_MedicalExpense")
        self.lineEdit_cardNo = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_cardNo.setGeometry(QtCore.QRect(230, 60, 321, 41))
        self.lineEdit_cardNo.setObjectName("lineEdit_cardNo")
        self.lineEdit_PersonName = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_PersonName.setGeometry(QtCore.QRect(230, 140, 331, 41))
        self.lineEdit_PersonName.setObjectName("lineEdit_PersonName")
        self.lineEdit_DepartMent = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_DepartMent.setGeometry(QtCore.QRect(570, 140, 311, 41))
        self.lineEdit_DepartMent.setObjectName("lineEdit_DepartMent")
        self.label_MedicalRemaining = QtWidgets.QLabel(self.centralwidget)
        self.label_MedicalRemaining.setGeometry(QtCore.QRect(670, 190, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Angsana New")
        font.setPointSize(24)
        self.label_MedicalRemaining.setFont(font)
        self.label_MedicalRemaining.setObjectName("label_MedicalRemaining")
        self.pushButton_API = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_API.setGeometry(QtCore.QRect(360, 10, 111, 41))
        self.pushButton_API.setObjectName("pushButton_API")
        CheckBalance.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(CheckBalance)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 900, 21))
        self.menubar.setObjectName("menubar")
        CheckBalance.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(CheckBalance)
        self.statusbar.setObjectName("statusbar")
        CheckBalance.setStatusBar(self.statusbar)
        self.pushButton_API.clicked.connect(self.getAPI)
        self.lineEdit_cardNo.returnPressed.connect(self.onPressed)
        self.lineEdit_cardNo.setFocus()
        self.retranslateUi(CheckBalance)
        model = QtGui.QStandardItemModel(0,5)
        model.setHorizontalHeaderLabels( [  "วันที่ทำรายการ","หมายเลขเครื่อง", "หมายเลขรายการ","เงินก่อนหน้า","จำนวนเงินทำรายการ","จำนวนเงินที่เหลือ"] )
        self.tableView_transection.setModel(model)
        self.tableView_transection.setColumnWidth(0,200)
        self.tableView_transection.setColumnWidth(1,100)
        self.tableView_transection.setColumnWidth(2,100)
        self.tableView_transection.setColumnWidth(3,100)
        self.tableView_transection.setColumnWidth(4,150)
        self.tableView_transection.setColumnWidth(5,100)
        QtCore.QMetaObject.connectSlotsByName(CheckBalance)
 
    def retranslateUi(self, CheckBalance):
        _translate = QtCore.QCoreApplication.translate
        CheckBalance.setWindowTitle(_translate("CheckBalance", "Check Balance"))
        self.labe_lCardNo.setText(_translate("CheckBalance", "Card No"))
        self.label_PersonNo.setText(_translate("CheckBalance", "Person No."))
        self.label_PersonName.setText(_translate("CheckBalance", "Person Name "))
        self.label_AmountCanUse.setText(_translate("CheckBalance", "0.00"))
        self.label_PersonalLeave.setText(_translate("CheckBalance", "Personal Leave"))
        self.label_Department.setText(_translate("CheckBalance", "Department"))
        self.label_RemainingLeave.setText(_translate("CheckBalance", "Remaining Leave"))
        self.label_MedicalExpense.setText(_translate("CheckBalance", "Medical Expenses"))
        self.label_MedicalRemaining.setText(_translate("CheckBalance", "Medical remaining"))
        self.pushButton_API.setText(_translate("CheckBalance", "API"))
        
    def cleardata(self):
        self.label_AmountCanUse.setText("0.00")
        self.lineEdit_cardNo.setText("")
        self.lineEdit_PersonNo.setText("")
        self.lineEdit_PersonName.setText("")
        self.lineEdit_DepartMent.setText("")
        self.lineEdit_personLeave.setText("")
        self.lineEdit_RemainLeave.setText("")
        self.lineEdit_MedicalExpenses.setText("") 
        self.lineEdit_MedicalExpenses.setText("")
        model = QtGui.QStandardItemModel(0,5)
        model.setHorizontalHeaderLabels( [  "วันที่ทำรายการ","หมายเลขเครื่อง", "หมายเลขรายการ","เงินก่อนหน้า","จำนวนเงินทำรายการ","จำนวนเงินที่เหลือ"] )
        self.tableView_transection.setModel(model)
        self.tableView_transection.setColumnWidth(0,200)
        self.tableView_transection.setColumnWidth(1,100)
        self.tableView_transection.setColumnWidth(2,100)
        self.tableView_transection.setColumnWidth(3,100)
        self.tableView_transection.setColumnWidth(4,150)
        self.tableView_transection.setColumnWidth(5,100)
        self.lineEdit_cardNo.setFocus()
    def onPressed(self):
        cardNo = self.lineEdit_cardNo.text()
        server = 'tcp:192.168.1.75' 
        database = 'fcs' 
        username = 'tcmfd' 
        password = 'ssmct'
        cnxn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER='+server+';DATABASE='+database+';UID='+username+';PWD='+ password)
        cursor = cnxn.cursor()
        cursor.execute("SELECT TOP 1 tc.amtcanuse,tc.card_no,te.emp_code, te.empname, te.emp_id FROM tcard_info tc LEFT JOIN temployee_info te ON tc.card_no = te.card_no WHERE tc.card_no = "+cardNo+";") 
        data = cursor.fetchone() 
        while data: 
            self.label_AmountCanUse.setText(str(data[0]))
            self.lineEdit_cardNo.setText(data[1])
            self.lineEdit_PersonNo.setText(data[2])
            self.lineEdit_PersonName.setText(data[3])
            self.lineEdit_DepartMent.setText(data[4])
            self.lineEdit_personLeave.setText('10')
            self.lineEdit_RemainLeave.setText('0')
            self.lineEdit_MedicalExpenses.setText('1000') 
            self.lineEdit_MedicalExpenses.setText('0')
            data = cursor.fetchone()
        cursor.execute("SELECT TOP 5 * FROM (" +
            "SELECT TOP 5 CONVERT(varchar(20),txndate) AS txndate,"+
            "cashier_code,CONVERT(varchar(10),befbalamt) AS befbalamt ,"+
            "CONVERT(varchar(10),amt) AS amt,"+
            "CONVERT(varchar(10),balamt)AS balamt,'C' AS terminal FROM tvcashierprocessall WHERE card_no = "+cardNo+" ORDER BY txndate "+
            "UNION "+
            "SELECT TOP 5  CONVERT(varchar(20),txndate) AS txndate,"+
            " terminal_code,CONVERT(varchar(10),befamtuse) AS befamtuse,"+
            "CONVERT(varchar(10),amtuse) AS amtuse ,"+
            "CONVERT(varchar(10),amtbal) AS amtbal,'T' AS terminal FROM tvterminalprocess WHERE card_no = "+cardNo+"  ORDER BY txndate "+
            ")X ORDER BY txndate")
        datatable = cursor.fetchall()
        model = QtGui.QStandardItemModel(0,5)
        model.setHorizontalHeaderLabels( [  "วันที่ทำรายการ","หมายเลขเครื่อง", "เงินก่อนหน้า","จำนวนเงินทำรายการ","จำนวนเงินที่เหลือ","ร้านค้า/แคชเชียร์"] )
        self.tableView_transection.setColumnWidth(0,200)
        self.tableView_transection.setColumnWidth(1,100)
        self.tableView_transection.setColumnWidth(2,100)
        self.tableView_transection.setColumnWidth(3,150)
        self.tableView_transection.setColumnWidth(4,150)
        self.tableView_transection.setColumnWidth(5,100) 
        for d in datatable:
            rowtable = []
            for name in d:
                item = QtGui.QStandardItem(name)
                item.setEditable(False)
                rowtable.append(item)
            model.appendRow(rowtable)
        self.tableView_transection.setModel(model)
        QtTest.QTest.qWait(5000)
        self.cleardata()  
    def getAPI(self):
        url = 'http://192.168.1.211/ISAPI/AccessControl/AcsEvent?format=json'
        strtTime = datetime.datetime.now() - datetime.timedelta(seconds=5)
        endTime = datetime.datetime.now() + datetime.timedelta(seconds=5)
        # strtTime = strtTime.strftime()+":00+07:00"
        # endTime = endTime.strftime()+":00+07:00"
        strtTime = strtTime.replace(tzinfo=FixedOffset(7*60,"GMT+0700")).isoformat()
        endTime = endTime.replace(tzinfo=FixedOffset(7*60,"GMT+0700")).isoformat()
        strtTime =str(strtTime).split(".",12)
        endTime = str(endTime).split(".",12)
        strtTime = strtTime[0] +"+07:00"
        endTime = endTime[0]+"+07:00"
        # tzinfo=<FixedOffset '-04:00'>
        print(strtTime)
        print(endTime)
        # 0000848065
        # 0013085189
        # 0004161757

        # data = {"AcsEventCond":{"searchID":"1",
        #     "searchResultPosition":0,
        #     "maxResults":15,
        #     "major":0,
        #     "minor":0,
        #     "startTime":"2021-07-19T16:50:00+07:00",
        #     "endTime":"2021-07-19T17:51:00+07:00"}}
        data = {"AcsEventCond":{"searchID":"1",
            "searchResultPosition":0,
            "maxResults":15,
            "major":0,
            "minor":0,
            "startTime":strtTime,
            "endTime":endTime}}
        try:
            print(data)
            response = requests.post(url, auth=HTTPDigestAuth('admin','Abc12345'),json=data)
            json_data = json.loads(response.text)
            print(json_data)
            for some_variable in json_data['AcsEvent']['InfoList']:
                # if some_variable['time']=='2021-07-19T16:50:42+07:00':
                if some_variable['cardNo']!='':
                    cardNo = some_variable['cardNo']
                    print(cardNo)
                    server = 'tcp:192.168.1.75' 
                    database = 'fcs' 
                    username = 'tcmfd' 
                    password = 'ssmct'
                    cnxn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER='+server+';DATABASE='+database+';UID='+username+';PWD='+ password)
                    cursor = cnxn.cursor()
                    cursor.execute("SELECT TOP 1 tc.amtcanuse,tc.card_no,te.emp_code, te.empname, te.emp_id FROM tcard_info tc LEFT JOIN temployee_info te ON tc.card_no = te.card_no WHERE tc.card_no = "+cardNo+";") 
                    data = cursor.fetchone() 
                    while data: 
                        self.label_AmountCanUse.setText(str(data[0]))
                        self.lineEdit_cardNo.setText(data[1])
                        self.lineEdit_PersonNo.setText(data[2])
                        self.lineEdit_PersonName.setText(data[3])
                        self.lineEdit_DepartMent.setText(data[4])
                        self.lineEdit_personLeave.setText('10')
                        self.lineEdit_RemainLeave.setText('0')
                        self.lineEdit_MedicalExpenses.setText('1000') 
                        self.lineEdit_MedicalExpenses.setText('0')
                        data = cursor.fetchone()
                    cursor.execute("SELECT TOP 5 * FROM (" +
                        "SELECT TOP 5 CONVERT(varchar(20),txndate) AS txndate,"+
                        "cashier_code,CONVERT(varchar(10),befbalamt) AS befbalamt ,"+
                        "CONVERT(varchar(10),amt) AS amt,"+
                        "CONVERT(varchar(10),balamt)AS balamt,'C' AS terminal FROM tvcashierprocessall WHERE card_no = "+cardNo+" ORDER BY txndate "+
                        "UNION "+
                        "SELECT TOP 5  CONVERT(varchar(20),txndate) AS txndate,"+
                        " terminal_code,CONVERT(varchar(10),befamtuse) AS befamtuse,"+
                        "CONVERT(varchar(10),amtuse) AS amtuse ,"+
                        "CONVERT(varchar(10),amtbal) AS amtbal,'T' AS terminal FROM tvterminalprocess WHERE card_no = "+cardNo+"  ORDER BY txndate "+
                        ")X ORDER BY txndate")
                    datatable = cursor.fetchmany(6)
                    model = QtGui.QStandardItemModel(0,5)
                    model.setHorizontalHeaderLabels( [  "วันที่ทำรายการ","หมายเลขเครื่อง", "เงินก่อนหน้า","จำนวนเงินทำรายการ","จำนวนเงินที่เหลือ","ร้านค้า/แคชเชียร์"] )
                    self.tableView_transection.setColumnWidth(0,200)
                    self.tableView_transection.setColumnWidth(1,100)
                    self.tableView_transection.setColumnWidth(2,100)
                    self.tableView_transection.setColumnWidth(3,150)
                    self.tableView_transection.setColumnWidth(4,150)
                    self.tableView_transection.setColumnWidth(5,100) 
                    for d in datatable:
                        rowtable = []
                        for name in d:
                            item = QtGui.QStandardItem(name)
                            item.setEditable(False)
                            rowtable.append(item)
                        model.appendRow(rowtable)
                    self.tableView_transection.setModel(model)   
                    QtTest.QTest.qWait(5000)
                    self.cleardata()  
        except Exception as e:
            print(e)
    def looptime(self):
        while True:
            QtTest.QTest.qWait(5000)
            self.getAPI()
import MyImage_rc

    
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CheckBalance = QtWidgets.QMainWindow()
    ui = Ui_CheckBalance()
    ui.setupUi(CheckBalance)
    CheckBalance.show()
    ui.looptime()
    sys.exit(app.exec_())
    
    
